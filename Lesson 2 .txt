Single tread
JS runtime
Event loop
Call stuck and memory heap
GEC
WEB api
Connection betwwen web api and GE through global window object
Task and microtask queues (Promises BC, like fetch and mutation observers - render steps)
Starvation (settimeout vs normal loop as stravation example)
60.6 ms or 60frames per second, async loop not blocking repaint of screen, render steps, settimeout is not render blocking

EC - Memory component (variable environment) and Code component (thread of execution)
Memory creation and code execution phases . 
1. Create global object 
2. Create object called this 
3. Set up memory space for variables and function declarations 
4. Assign variable declarations a default value of undefined, while placing all functions directly in memory 
Arguments object for FEC(skipping hoisting while memory alocation)

All the EC after creation is pushing to call stack, which has multiple names 
* Call stack 
* Execution context stack 
* Program stack 
* Control stack 
* Runtime stack 
* Machine stack 