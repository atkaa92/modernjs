Function statement - basic function keyword plus function name, also known as function declaration. Define at parsetime (creation phase). We cant imedialely call function declaration like IIFEs.
Function expression - assigning function to a variable. Here function acts like a value. Define at runtime (execution phase).
Anonymous function - function without a name. Just creation anonymous function will throw a Syntax Error.
Named function expression - same as function expression, but with assigned name. It can't be called by name.
First class functions - the ability to use functions as values is known as FCF. Assign them to variables, pass to another function, return from function.
Callback function - a function which passed into another function as an argument, which is then invoked inside.
Higher order functions - a function which take another function as an argument or returns a function from it.
Constructor function - a function which used in JS to create an object. Arrow function can't be Constructor functions as they dont have this keyword. 
IIFEs - imedialely invokable function expression - a function that will be imedialely called. IIFEs known as function expression.
IIFEs used to avoid global variables issues, as they are ruanning imedialely and haveig thei onw FEC or scope.
Factory functions - functions which creating Objects.
Map - used to transorme an existing array by given function and return new array.
Filter - used to filter inside the given array and return new array.
Reduce - used to take all the elements and come of the single value of them, with the logic inside the CB function.

Main difference between function statement and function expression is hoisting.
Event listeners callback functions variables are not garbage collectored. So removing event listeners is a good practice.
We passing argumets to functions, and functions accept that argumets through parameters.
Calling Cunstructor Functions with keyword new , makes them to cretae a new object inside the function and retun that at the end.
A polyfill is a piece of code (usually JavaScript on the Web) used to provide modern functionality on older browsers that do not natively support it.

function alo () {
    log('alo')
}
alo() === alo.call()


'use strict' on the top of .js file will prevent of pushing function scope undecliared variables to global scope
function alo () {
    asa = 'asa' (asa is not defined)
}
it can be added to function which will burn all conections with global object, that means this will be undefined insde function

var a = function b () {}
b() (b is not defined)
var a = function b () { log(b)} (b is defined here, in FEC)

function currying - to use bind method to create a new function with predifined parameter, like multiply(x, y) and multiplyByTwo(2, y) 

Functions are special type of Objects which are called 'Callable Object',
with bracket notation (), for calling function, it has optional name property, an more properties like call, bind, applay.

In JS functions are first class citizens.
1. functions can be assigned to variables or object property
2. functions can be passed as arguments
3. functions can be returned as values from other functions